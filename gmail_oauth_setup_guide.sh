#!/bin/bash
# Gmail OAuth Setup and Testing Guide for BlueLabel AIOS v2

echo "ðŸš€ Gmail OAuth Setup and Testing Guide"
echo "======================================"
echo ""

echo "ðŸ“‹ STEP 1: Install Dependencies"
echo "------------------------------"
echo "# Install required Python packages:"
echo "pip install fastapi uvicorn pydantic python-dotenv"
echo "pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client"
echo "pip install python-json-logger redis"
echo ""

echo "ðŸ“‹ STEP 2: Set Up Google OAuth Credentials"
echo "-----------------------------------------"
echo "1. Go to Google Cloud Console: https://console.cloud.google.com/"
echo "2. Create a new project or select existing one"
echo "3. Enable Gmail API for your project"
echo "4. Go to APIs & Services > Credentials"
echo "5. Create OAuth 2.0 credentials (Web application type)"
echo "6. Add redirect URI: urn:ietf:wg:oauth:2.0:oob"
echo "7. Copy the Client ID and Client Secret"
echo ""

echo "ðŸ“‹ STEP 3: Set Environment Variables"
echo "-----------------------------------"
echo "# Set your OAuth credentials:"
echo "export GOOGLE_CLIENT_ID='your_client_id_here'"
echo "export GOOGLE_CLIENT_SECRET='your_client_secret_here'"
echo "export GOOGLE_REDIRECT_URI='urn:ietf:wg:oauth:2.0:oob'"
echo ""

echo "ðŸ“‹ STEP 4: Test with Our Test Server"
echo "-----------------------------------"
echo "# Start the Gmail OAuth test server:"
echo "cd /Users/arielmuslera/Development/Projects/bluelabel-autopilot"
echo "python3 test_gmail_server.py"
echo ""
echo "# In another terminal, test the endpoints:"
echo "python3 test_gmail_client.py"
echo ""

echo "ðŸ“‹ STEP 5: Test with Full AIOS v2 Server"
echo "---------------------------------------"
echo "# Navigate to AIOS v2 project:"
echo "cd /Users/arielmuslera/Development/Projects/bluelabel-AIOS-V2"
echo ""
echo "# Start the full API server:"
echo "uvicorn apps.api.main:app --reload --host 0.0.0.0 --port 8000"
echo ""

echo "ðŸ“‹ STEP 6: Complete OAuth Flow"
echo "-----------------------------"
echo "1. Visit: http://localhost:8000/docs"
echo "2. Go to Gmail OAuth section"
echo "3. Use POST /api/v1/gmail/auth endpoint (no body)"
echo "4. Copy the authorization URL from response"
echo "5. Visit the URL in browser and authorize access"
echo "6. Copy the authorization code"
echo "7. Use POST /api/v1/gmail/auth endpoint with:"
echo '   {"auth_code": "your_authorization_code_here"}'
echo ""

echo "ðŸ“‹ STEP 7: Test Email Functionality"
echo "----------------------------------"
echo "# Send a test email:"
echo 'curl -X POST "http://localhost:8000/api/v1/gmail/send" \\'
echo '  -H "Content-Type: application/json" \\'
echo '  -d "{"to": ["test@example.com"], "subject": "Test", "body": "Hello World"}"'
echo ""
echo "# Fetch emails:"
echo 'curl -X POST "http://localhost:8000/api/v1/gmail/fetch" \\'
echo '  -H "Content-Type: application/json" \\'
echo '  -d "{"query": "is:unread", "max_results": 5}"'
echo ""

echo "âœ… VERIFICATION COMMANDS"
echo "========================"
echo ""
echo "# Check if dependencies are installed:"
echo "python3 -c 'import google.auth, google_auth_oauthlib, googleapiclient.discovery; print(\"âœ… All dependencies installed\")'"
echo ""
echo "# Check environment variables:"
echo "echo \"GOOGLE_CLIENT_ID: \${GOOGLE_CLIENT_ID:-Not Set}\""
echo "echo \"GOOGLE_CLIENT_SECRET: \${GOOGLE_CLIENT_SECRET:-Not Set}\""
echo ""
echo "# Test server connectivity:"
echo "curl http://localhost:8000/health"
echo ""
echo "# Check authentication status:"
echo "curl http://localhost:8000/api/v1/gmail/auth/status"
echo ""

echo "ðŸŽ¯ QUICK TEST COMMAND"
echo "====================="
echo "# Run our comprehensive test:"
echo "python3 test_gmail_oauth_simple.py"
echo ""

echo "ðŸ“š USEFUL ENDPOINTS"
echo "==================="
echo "GET  /health                           - Server health"
echo "GET  /api/v1/gmail/auth/status         - Auth status"
echo "GET  /api/v1/gmail/setup-instructions  - Setup help"
echo "POST /api/v1/gmail/auth                - Start/complete OAuth"
echo "POST /api/v1/gmail/send                - Send email"
echo "POST /api/v1/gmail/fetch               - Fetch emails"
echo ""

echo "ðŸ”§ TROUBLESHOOTING"
echo "=================="
echo "# If server won't start:"
echo "lsof -ti:8000 | xargs kill -9  # Kill processes on port 8000"
echo ""
echo "# If dependencies missing:"
echo "pip install --upgrade pip"
echo "pip install -r /Users/arielmuslera/Development/Projects/bluelabel-AIOS-V2/requirements.txt"
echo ""
echo "# If OAuth fails:"
echo "rm token.json  # Remove old token file"
echo "# Check environment variables are set correctly"
echo ""

echo "âœ¨ You're all set! The Gmail OAuth implementation is ready for testing."